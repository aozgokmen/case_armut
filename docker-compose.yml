services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: armut
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d armut"]
      interval: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d:ro
      - ./data-files/users.ndjson:/data/users.ndjson:ro

  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners (iç ağ + dış erişim)
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - ./data-files:/data-files:ro

  users-loader:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PG_DSN: postgresql://postgres:postgres@postgres:5432/armut
    volumes:
      - ./scripts:/app:ro
      - ./data-files/users.ndjson:/data/users.ndjson:ro
    working_dir: /app
    command: ["python", "load_users.py"]

  jobs-consumer:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PG_DSN: postgresql://postgres:postgres@postgres:5432/armut
      KAFKA_BOOTSTRAP: kafka:9092
      KAFKA_TOPIC: jobs
      KAFKA_GROUP: etl-jobs-consumer
    volumes:
      - ./scripts:/app:ro
    working_dir: /app
    command: ["python", "load_consumer.py"]

volumes:
  pgdata: